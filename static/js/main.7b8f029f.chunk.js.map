{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","selectedFilter","todos","this","props","filter","todo","title","includes","completed","className","htmlFor","value","id","placeholder","onChange","event","setState","target","map","key","type","checked","readOnly","onComplete","onClick","onUserSelect","userId","React","Component","getUserById","fetch","then","response","json","CurrentUser","user","userFromServer","data","prevProps","onUserClear","name","email","phone","defaultProps","App","selectedUserId","item","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b8f029f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    selectedFilter: 'All',\n  }\n\n  render() {\n    let { todos } = this.props;\n    const { query, selectedFilter } = this.state;\n\n    todos = todos\n      .filter(todo => todo.title.includes(query))\n      .filter((todo) => {\n        if (selectedFilter === 'Active') {\n          return !todo.completed;\n        }\n\n        if (selectedFilter === 'Completed') {\n          return todo.completed;\n        }\n\n        return todo;\n      });\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <label htmlFor=\"todoInput\">\n          Todo title:&nbsp;\n          <input\n            value={query}\n            id=\"todoInput\"\n            placeholder=\"Input a title of todo\"\n            onChange={event => this.setState({ query: event.target.value })}\n          />\n        </label>\n\n        <select\n          value={selectedFilter}\n          onChange={event => (\n            this.setState({ selectedFilter: event.target.value })\n          )}\n        >\n          <option>All</option>\n          <option>Active</option>\n          <option>Completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item\n                  TodoList__item--${todo.completed ? 'checked' : 'unchecked'}\n                `}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                    onChange={() => this.props.onComplete(todo)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => this.props.onUserSelect(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape().isRequired,\n  ).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onUserSelect: PropTypes.func.isRequired,\n};\n","export function getAllTodos() {\n  return fetch('https://mate-api.herokuapp.com/todos')\n    .then(response => response.json());\n}\n\nexport function getUserById(id) {\n  return fetch(`https://mate-api.herokuapp.com/users/${id}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserById } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUserById(this.props.userId)\n      .then(userFromServer => (\n        this.setState({\n          user: userFromServer.data,\n        })\n      ));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUserById(this.props.userId)\n        .then(userFromServer => (\n          this.setState({\n            user: userFromServer.data,\n          })\n        ));\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    const { onUserClear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user: &nbsp;\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          type=\"button\"\n          onClick={onUserClear}\n          className=\"CurrentUser__clear button\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number,\n  onUserClear: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  userId: 0,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getAllTodos();\n\n    this.setState({\n      todos: todosFromServer.data.filter(todo => todo.title && todo.userId),\n    });\n  }\n\n  onComplete = (todo) => {\n    this.setState((state) => {\n      const item = todo;\n\n      item.completed = !item.completed;\n\n      return {\n        todos: [...state.todos],\n      };\n    });\n  }\n\n  onUserSelect = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  onUserClear = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onComplete={this.onComplete}\n            onUserSelect={this.onUserSelect}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onUserClear={this.onUserClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}